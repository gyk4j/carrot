# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: windows-latest
    
    env:
      PROJECT_NAME: ${{ github.event.repository.name }}
      PYTHON_VERSION: 3.8
      VIPS_VERSION: 8.10.5
    
    defaults:
      run:
        shell: bash

    steps:
    - name: Cache libvips
      id: cache-libvips
      uses: actions/cache@v4
      env:
        cache-name: cache-libvips
      with:
        path: |
          ${{ runner.temp }}/vips-dev-w64-all-${{ env.VIPS_VERSION }}.zip
        key: ${{ runner.os }}-build-${{ env.cache-name }}

    - if: ${{ steps.cache-libvips.outputs.cache-hit != 'true' }}    
      name: Download libvips
      #continue-on-error: true
      working-directory: ${{ runner.temp }}
      run: |
        curl -sSL -O https://github.com/libvips/libvips/releases/download/v$VIPS_VERSION/vips-dev-w64-all-$VIPS_VERSION.zip
    - uses: actions/checkout@v4
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install dependencies
      run: |
        py -$PYTHON_VERSION -m pip install --upgrade pip
        pip install flake8 pytest build setuptools pyinstaller cx-Freeze==6.15.16
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with flake8
#      run: |
        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        pytest

    - name: Build Python Package
      run: |
        py -$PYTHON_VERSION -m build

    - name: Upload Package Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}-whl
        path: dist/
        if-no-files-found: error
        retention-days: 1
        
    - name: Extract libvips
      working-directory: ${{ runner.temp }}
      run: |
        unzip -qq vips-dev-w64-all-$VIPS_VERSION.zip
        mkdir -p "$GITHUB_WORKSPACE/lib64/libvips"
        mv vips-dev-8.10/bin/*.dll "$GITHUB_WORKSPACE/lib64/libvips/"
          
    - name: Build PyInstaller Package
      run: |
        pyinstaller ${{ env.PROJECT_NAME }}.spec

    - name: Upload PyInstaller Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}-bin-${{ runner.os }}-${{ runner.arch }}-pyinstaller
        path: dist/${{ env.PROJECT_NAME }}/
        if-no-files-found: error
        retention-days: 1

    - name: Generate Placeholder Test Images
      run: |
        curl -sSL -o 0.jpg https://placehold.co/640x480/jpeg
        cp 0.jpg 1.jpg
        cp 0.jpg 2.jpg
        cp 0.jpg 3.jpg
        cp 0.jpg 4.jpg
        cp 0.jpg 5.jpg
        cp 0.jpg 6.jpg
        cp 0.jpg 7.jpg
        cp 0.jpg 8.jpg

    - name: Build cx_Freeze Package
      run: |
        py setup.py build

    - name: Upload cx_Freeze Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}-bin-${{ runner.os }}-${{ runner.arch }}-cxfreeze
        path: build/exe.win-amd64-${{ env.PYTHON_VERSION }}/
        if-no-files-found: error
        retention-days: 1
        
